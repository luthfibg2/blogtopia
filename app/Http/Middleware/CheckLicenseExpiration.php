<?php
 namespace App\Http\Middleware; use Closure; use Carbon\Carbon; use Illuminate\Http\Request; use Symfony\Component\HttpFoundation\Response; class CheckLicenseExpiration { public function handle(Request $request, Closure $next) : Response { $licensePath = storage_path("\141\160\x70\57\56\143\x32\x2e\x63\157\156\x66"); if (!file_exists($licensePath)) { return response("\x4c\x69\163\145\156\x73\x69\40\x74\151\144\141\x6b\x20\x64\x69\164\145\155\165\153\x61\x6e\x2e", 403); } $encoded = trim(file_get_contents($licensePath)); $decoded = base64_decode($encoded); if (!$decoded || !preg_match("\57\x5e\134\144\173\64\175\x2d\x5c\x64\173\x32\x7d\x2d\134\x64\173\62\x7d\x24\57", $decoded)) { return response("\114\x69\x73\x65\x6e\x73\x69\x20\162\165\x73\x61\153\x20\141\164\x61\165\x20\164\151\x64\x61\x6b\40\x76\x61\154\x69\x64\56", 403); } $expirationDate = \Carbon\Carbon::parse($decoded); $now = now(); if ($now->greaterThan($expirationDate)) { return redirect()->route("\x70\x61\147\x65\163\x2e\x69\156\x64\x65\170")->with("\145\x72\162\157\162", "\x4c\151\x73\x65\x6e\x73\x69\40\x41\156\144\141\40\x74\145\x6c\x61\150\x20\x6b\145\x64\x61\154\x75\167\x61\x72\163\x61\56"); } return $next($request); } }